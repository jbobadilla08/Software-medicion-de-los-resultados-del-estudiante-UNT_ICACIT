/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import beans.Criterio;
import beans.Definicion;
import beans.DefinicionHasMomento;
import beans.DefinicionHasNivel;
import beans.Momento;
import beans.NivelLogro;
import beans.Resultado;
import Utilidades.Utilitarios;
import java.awt.Font;
import java.awt.Toolkit;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.LinkedList;
import javax.swing.JComboBox;
import log.CriterioLog;
import log.DefinicionHasMomentoLog;
import log.DefinicionHasNivelLog;
import log.DefinicionLog;
import log.MomentoLog;
import log.NivelLogroLog;
import log.ResultadoLog;

/**
 *
 * @author alfie
 */
public class PanResEstudiantes extends javax.swing.JPanel {
    ResultadoLog objRes = new ResultadoLog();
    CriterioLog objCr = new CriterioLog();
    NivelLogroLog objNl = new NivelLogroLog();
    DefinicionLog objRh = new DefinicionLog();
    MomentoLog objMn = new MomentoLog();
    DefinicionHasMomentoLog objDhm =  new DefinicionHasMomentoLog();
    DefinicionHasNivelLog objDhn = new DefinicionHasNivelLog();
    
    private LinkedList<Resultado> listResultados = objRes.lista();
    private LinkedList<Criterio> listCriterios = objCr.lista(); //lista de criterios vigentes
    private LinkedList<NivelLogro> listNivelesLogro = objNl.lista();
    private LinkedList<Momento> listMomentos = objMn.lista();
    
    
    
    boolean privilegio = DashboardAdmin.admin.isPrivilegios();
    boolean band = false; // bandera para guardar o actualizar un registros
    boolean bandc = false; //bandera para la Gui criterios
    boolean bandNl = false; //bandera para la Gui niveles de logro
    boolean bandRh = false; //bandera de la GUI rubrica holistica
    boolean bandRa = false; //bandera de la GUI rubrica analitica
    Resultado auxResultado;
    Criterio auxCriterio;
    NivelLogro auxNivelLogro;
    Definicion auxDefinicion;
    DefinicionHasMomento auxDefinicionHasMomento;
    Momento auxMomento;
    DefinicionHasNivel auxDefinicionHasNivel;
    
    /**
     * Creates new form PanPlanCur
     */
    public PanResEstudiantes() {
        initComponents();
        ConfigInicial();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgVigente = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        PanResultados = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCodigo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtVersion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jrbSi = new javax.swing.JRadioButton();
        jrbNo = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtDescripcion = new javax.swing.JTextPane();
        jPanel8 = new javax.swing.JPanel();
        btnNuevo = new javax.swing.JButton();
        btnGuardar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnBuscarTable = new javax.swing.JButton();
        cmbVigenteRs = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResultados = new javax.swing.JTable();
        PanCriterios = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        txtIdc = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtCodigoc = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtDescripcionc = new javax.swing.JTextPane();
        jLabel12 = new javax.swing.JLabel();
        cmbResultadosCr = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        btnBuscarTblCr = new javax.swing.JButton();
        cmbVigenteCr = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCriterios = new javax.swing.JTable();
        jPanel9 = new javax.swing.JPanel();
        btnNuevoCr = new javax.swing.JButton();
        btnGuardarCr = new javax.swing.JButton();
        btnBuscarCr = new javax.swing.JButton();
        btnEliminarCr = new javax.swing.JButton();
        btnEditarCr = new javax.swing.JButton();
        PanNiveles = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        txtIdNl = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtNombreNl = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtAbreviaturaNl = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtValMin = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtValMax = new javax.swing.JTextField();
        jPanel10 = new javax.swing.JPanel();
        btnNuevoNl = new javax.swing.JButton();
        btnGuardarNl = new javax.swing.JButton();
        btnBuscarNl = new javax.swing.JButton();
        btnEliminarNl = new javax.swing.JButton();
        btnEditarNl = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblNivelesLogro = new javax.swing.JTable();
        jPanel7 = new javax.swing.JPanel();
        registro = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtIdRh = new javax.swing.JTextField();
        cmbCriterioRh = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtDefinicionRh = new javax.swing.JTextPane();
        cmbMomentoRh = new javax.swing.JComboBox<>();
        botones = new javax.swing.JPanel();
        btnNuevoRh = new javax.swing.JButton();
        btnGuardarRh = new javax.swing.JButton();
        btnBuscarRh = new javax.swing.JButton();
        btnEliminarRh = new javax.swing.JButton();
        btnEditarRh = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tblRh = new javax.swing.JTable();
        jPanel11 = new javax.swing.JPanel();
        registro1 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        txtIdRa = new javax.swing.JTextField();
        cmbCriteriosRa = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        txtDescripcionRa = new javax.swing.JTextPane();
        jLabel28 = new javax.swing.JLabel();
        cmbNivelLogroRa = new javax.swing.JComboBox<>();
        jLabel29 = new javax.swing.JLabel();
        cmbMomentoRa = new javax.swing.JComboBox<>();
        botones1 = new javax.swing.JPanel();
        btnNuevoRa = new javax.swing.JButton();
        btnGuardarRa = new javax.swing.JButton();
        btnBuscarRa = new javax.swing.JButton();
        btnEliminarRa = new javax.swing.JButton();
        btnEditarRa = new javax.swing.JButton();
        jPanel13 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tblRa = new javax.swing.JTable();

        setBackground(new java.awt.Color(214, 217, 223));

        PanResultados.setBackground(new java.awt.Color(214, 217, 223));

        jPanel1.setBackground(new java.awt.Color(214, 217, 223));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        jLabel1.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(29, 32, 33));
        jLabel1.setText("ID:");

        txtId.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtId.setForeground(new java.awt.Color(29, 32, 33));
        txtId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdKeyTyped(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(29, 32, 33));
        jLabel2.setText("CÃ³digo:");

        txtCodigo.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtCodigo.setForeground(new java.awt.Color(29, 32, 33));
        txtCodigo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(29, 32, 33));
        jLabel3.setText("TÃ­tulo:");

        txtTitulo.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtTitulo.setForeground(new java.awt.Color(29, 32, 33));
        txtTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTituloKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(29, 32, 33));
        jLabel4.setText("DescripciÃ³n:");

        jLabel5.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(29, 32, 33));
        jLabel5.setText("VersiÃ³n:");

        txtVersion.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtVersion.setForeground(new java.awt.Color(29, 32, 33));
        txtVersion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtVersionKeyTyped(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(29, 32, 33));
        jLabel6.setText("Vigente:");

        btgVigente.add(jrbSi);
        jrbSi.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jrbSi.setSelected(true);
        jrbSi.setText("Si");

        btgVigente.add(jrbNo);
        jrbNo.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jrbNo.setText("No");

        jLabel7.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(29, 32, 33));
        jLabel7.setText("Fecha CreaciÃ³n:");

        txtFecha.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 12)); // NOI18N
        txtFecha.setForeground(new java.awt.Color(29, 32, 33));

        txtDescripcion.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 12)); // NOI18N
        jScrollPane2.setViewportView(txtDescripcion);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtVersion, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbSi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbNo)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTitulo))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane2)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(txtTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jrbSi)
                    .addComponent(jrbNo)
                    .addComponent(jLabel7)
                    .addComponent(txtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.setBackground(new java.awt.Color(214, 217, 223));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnNuevo.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnNuevo.setForeground(new java.awt.Color(29, 32, 33));
        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        btnGuardar.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnGuardar.setForeground(new java.awt.Color(29, 32, 33));
        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnEliminar.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(29, 32, 33));
        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnEditar.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(29, 32, 33));
        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuscar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(btnNuevo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditar))
        );

        jPanel2.setBackground(new java.awt.Color(214, 217, 223));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VisualizaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnBuscarTable.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarTable.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarTable.setText("Buscar");
        btnBuscarTable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTableActionPerformed(evt);
            }
        });

        cmbVigenteRs.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbVigenteRs.setForeground(new java.awt.Color(29, 32, 33));
        cmbVigenteRs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Inactivos" }));

        jLabel11.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(29, 32, 33));
        jLabel11.setText("Mostrar:");

        tblResultados.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 12)); // NOI18N
        tblResultados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblResultados.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblResultados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbVigenteRs, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBuscarTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarTable)
                    .addComponent(cmbVigenteRs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanResultadosLayout = new javax.swing.GroupLayout(PanResultados);
        PanResultados.setLayout(PanResultadosLayout);
        PanResultadosLayout.setHorizontalGroup(
            PanResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanResultadosLayout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        PanResultadosLayout.setVerticalGroup(
            PanResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanResultadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanResultadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Resultados del Estudiante", PanResultados);

        PanCriterios.setBackground(new java.awt.Color(214, 217, 223));

        jPanel3.setBackground(new java.awt.Color(214, 217, 223));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        jLabel8.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(29, 32, 33));
        jLabel8.setText("ID:");

        txtIdc.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtIdc.setForeground(new java.awt.Color(29, 32, 33));
        txtIdc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdcKeyTyped(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(29, 32, 33));
        jLabel9.setText("CÃ³digo:");

        txtCodigoc.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtCodigoc.setForeground(new java.awt.Color(29, 32, 33));
        txtCodigoc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigocKeyTyped(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(29, 32, 33));
        jLabel10.setText("DescripciÃ³n:");

        txtDescripcionc.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 13)); // NOI18N
        txtDescripcionc.setForeground(new java.awt.Color(29, 32, 33));
        jScrollPane3.setViewportView(txtDescripcionc);

        jLabel12.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(29, 32, 33));
        jLabel12.setText("Resultado del Estudiante:");

        cmbResultadosCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbResultadosCr.setForeground(new java.awt.Color(29, 32, 33));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdc, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtCodigoc, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbResultadosCr, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtIdc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtCodigoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(cmbResultadosCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        jPanel4.setBackground(new java.awt.Color(214, 217, 223));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VisualizaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnBuscarTblCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarTblCr.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarTblCr.setText("Buscar");
        btnBuscarTblCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarTblCrActionPerformed(evt);
            }
        });

        cmbVigenteCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbVigenteCr.setForeground(new java.awt.Color(29, 32, 33));
        cmbVigenteCr.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Inactivos" }));

        jLabel19.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(29, 32, 33));
        jLabel19.setText("Mostrar:");

        tblCriterios.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 12)); // NOI18N
        tblCriterios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblCriterios.getTableHeader().setReorderingAllowed(false);
        jScrollPane4.setViewportView(tblCriterios);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(353, 353, 353)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbVigenteCr, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnBuscarTblCr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 631, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscarTblCr)
                    .addComponent(cmbVigenteCr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 327, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel9.setBackground(new java.awt.Color(214, 217, 223));
        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnNuevoCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnNuevoCr.setForeground(new java.awt.Color(29, 32, 33));
        btnNuevoCr.setText("Nuevo");
        btnNuevoCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCrActionPerformed(evt);
            }
        });

        btnGuardarCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnGuardarCr.setForeground(new java.awt.Color(29, 32, 33));
        btnGuardarCr.setText("Guardar");
        btnGuardarCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCrActionPerformed(evt);
            }
        });

        btnBuscarCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarCr.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarCr.setText("Buscar");
        btnBuscarCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarCrActionPerformed(evt);
            }
        });

        btnEliminarCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEliminarCr.setForeground(new java.awt.Color(29, 32, 33));
        btnEliminarCr.setText("Eliminar");
        btnEliminarCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCrActionPerformed(evt);
            }
        });

        btnEditarCr.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEditarCr.setForeground(new java.awt.Color(29, 32, 33));
        btnEditarCr.setText("Editar");
        btnEditarCr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarCrActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoCr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarCr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarCr, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuscarCr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarCr, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addComponent(btnNuevoCr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardarCr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarCr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarCr)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarCr))
        );

        javax.swing.GroupLayout PanCriteriosLayout = new javax.swing.GroupLayout(PanCriterios);
        PanCriterios.setLayout(PanCriteriosLayout);
        PanCriteriosLayout.setHorizontalGroup(
            PanCriteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanCriteriosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanCriteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanCriteriosLayout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        PanCriteriosLayout.setVerticalGroup(
            PanCriteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanCriteriosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanCriteriosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Criterios", PanCriterios);

        PanNiveles.setBackground(new java.awt.Color(214, 217, 223));

        jPanel5.setBackground(new java.awt.Color(214, 217, 223));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        jLabel13.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(29, 32, 33));
        jLabel13.setText("ID:");

        txtIdNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtIdNl.setForeground(new java.awt.Color(29, 32, 33));
        txtIdNl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdNlKeyTyped(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(29, 32, 33));
        jLabel14.setText("Nombre:");

        txtNombreNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtNombreNl.setForeground(new java.awt.Color(29, 32, 33));
        txtNombreNl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreNlKeyTyped(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(29, 32, 33));
        jLabel15.setText("Abreviatura:");

        txtAbreviaturaNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtAbreviaturaNl.setForeground(new java.awt.Color(29, 32, 33));
        txtAbreviaturaNl.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAbreviaturaNlKeyTyped(evt);
            }
        });

        jLabel16.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(29, 32, 33));
        jLabel16.setText("Valor MÃ­nimo:");

        txtValMin.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtValMin.setForeground(new java.awt.Color(29, 32, 33));
        txtValMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValMinKeyTyped(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(29, 32, 33));
        jLabel17.setText("Valor MÃ¡ximo:");

        txtValMax.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtValMax.setForeground(new java.awt.Color(29, 32, 33));
        txtValMax.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValMaxKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdNl, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel14)
                        .addGap(18, 18, 18)
                        .addComponent(txtNombreNl)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel15))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(txtValMin, javax.swing.GroupLayout.DEFAULT_SIZE, 124, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel17)
                        .addGap(18, 18, 18)
                        .addComponent(txtValMax, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154)))
                .addGap(18, 18, 18)
                .addComponent(txtAbreviaturaNl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtIdNl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(txtNombreNl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(txtAbreviaturaNl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17)
                    .addComponent(txtValMax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        jPanel10.setBackground(new java.awt.Color(214, 217, 223));
        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnNuevoNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnNuevoNl.setForeground(new java.awt.Color(29, 32, 33));
        btnNuevoNl.setText("Nuevo");
        btnNuevoNl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoNlActionPerformed(evt);
            }
        });

        btnGuardarNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnGuardarNl.setForeground(new java.awt.Color(29, 32, 33));
        btnGuardarNl.setText("Guardar");
        btnGuardarNl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarNlActionPerformed(evt);
            }
        });

        btnBuscarNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarNl.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarNl.setText("Buscar");
        btnBuscarNl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarNlActionPerformed(evt);
            }
        });

        btnEliminarNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEliminarNl.setForeground(new java.awt.Color(29, 32, 33));
        btnEliminarNl.setText("Eliminar");
        btnEliminarNl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarNlActionPerformed(evt);
            }
        });

        btnEditarNl.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEditarNl.setForeground(new java.awt.Color(29, 32, 33));
        btnEditarNl.setText("Editar");
        btnEditarNl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarNlActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoNl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarNl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarNl, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuscarNl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarNl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(btnNuevoNl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardarNl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarNl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarNl)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarNl))
        );

        jPanel6.setBackground(new java.awt.Color(214, 217, 223));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VisualizaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        tblNivelesLogro.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 12)); // NOI18N
        tblNivelesLogro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblNivelesLogro.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tblNivelesLogro);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout PanNivelesLayout = new javax.swing.GroupLayout(PanNiveles);
        PanNiveles.setLayout(PanNivelesLayout);
        PanNivelesLayout.setHorizontalGroup(
            PanNivelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanNivelesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42))
            .addGroup(PanNivelesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        PanNivelesLayout.setVerticalGroup(
            PanNivelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanNivelesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanNivelesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Niveles de Logro", PanNiveles);

        jPanel7.setBackground(new java.awt.Color(214, 217, 223));

        registro.setBackground(new java.awt.Color(214, 217, 223));
        registro.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        jLabel21.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(29, 32, 33));
        jLabel21.setText("ID:");

        jLabel22.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(29, 32, 33));
        jLabel22.setText("Criterio:");

        txtIdRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtIdRh.setForeground(new java.awt.Color(29, 32, 33));
        txtIdRh.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdRhKeyTyped(evt);
            }
        });

        cmbCriterioRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbCriterioRh.setForeground(new java.awt.Color(29, 32, 33));

        jLabel23.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(29, 32, 33));
        jLabel23.setText("DefiniciÃ³n:");

        jLabel24.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(29, 32, 33));
        jLabel24.setText("Momento:");

        jScrollPane6.setViewportView(txtDefinicionRh);

        cmbMomentoRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N

        javax.swing.GroupLayout registroLayout = new javax.swing.GroupLayout(registro);
        registro.setLayout(registroLayout);
        registroLayout.setHorizontalGroup(
            registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registroLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdRh, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22)
                        .addGap(18, 18, 18)
                        .addComponent(cmbCriterioRh, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(cmbMomentoRh, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(registroLayout.createSequentialGroup()
                        .addComponent(jLabel23)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6)))
                .addGap(6, 6, 6))
        );
        registroLayout.setVerticalGroup(
            registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registroLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtIdRh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22)
                    .addComponent(cmbCriterioRh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(cmbMomentoRh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(registroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registroLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jLabel23))
                    .addGroup(registroLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botones.setBackground(new java.awt.Color(214, 217, 223));
        botones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnNuevoRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnNuevoRh.setForeground(new java.awt.Color(29, 32, 33));
        btnNuevoRh.setText("Nuevo");
        btnNuevoRh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoRhActionPerformed(evt);
            }
        });

        btnGuardarRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnGuardarRh.setForeground(new java.awt.Color(29, 32, 33));
        btnGuardarRh.setText("Guardar");
        btnGuardarRh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarRhActionPerformed(evt);
            }
        });

        btnBuscarRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarRh.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarRh.setText("Buscar");
        btnBuscarRh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRhActionPerformed(evt);
            }
        });

        btnEliminarRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEliminarRh.setForeground(new java.awt.Color(29, 32, 33));
        btnEliminarRh.setText("Eliminar");

        btnEditarRh.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEditarRh.setForeground(new java.awt.Color(29, 32, 33));
        btnEditarRh.setText("Editar");
        btnEditarRh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarRhActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botonesLayout = new javax.swing.GroupLayout(botones);
        botones.setLayout(botonesLayout);
        botonesLayout.setHorizontalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoRh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarRh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarRh, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuscarRh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarRh, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        botonesLayout.setVerticalGroup(
            botonesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botonesLayout.createSequentialGroup()
                .addComponent(btnNuevoRh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardarRh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarRh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarRh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarRh))
        );

        jPanel12.setBackground(new java.awt.Color(214, 217, 223));
        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VisualizaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        tblRh.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane7.setViewportView(tblRh);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 780, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addComponent(registro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RÃºbrica HolÃ­stica", jPanel7);

        jPanel11.setBackground(new java.awt.Color(214, 217, 223));

        registro1.setBackground(new java.awt.Color(214, 217, 223));
        registro1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        jLabel25.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(29, 32, 33));
        jLabel25.setText("ID:");

        jLabel26.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(29, 32, 33));
        jLabel26.setText("Criterio:");

        txtIdRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        txtIdRa.setForeground(new java.awt.Color(29, 32, 33));
        txtIdRa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdRaKeyTyped(evt);
            }
        });

        cmbCriteriosRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbCriteriosRa.setForeground(new java.awt.Color(29, 32, 33));

        jLabel27.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(29, 32, 33));
        jLabel27.setText("DescripciÃ³n:");

        jScrollPane8.setViewportView(txtDescripcionRa);

        jLabel28.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(29, 32, 33));
        jLabel28.setText("Nivel Logro:");

        cmbNivelLogroRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbNivelLogroRa.setForeground(new java.awt.Color(29, 32, 33));

        jLabel29.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(29, 32, 33));
        jLabel29.setText("Momento:");

        cmbMomentoRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        cmbMomentoRa.setForeground(new java.awt.Color(29, 32, 33));

        javax.swing.GroupLayout registro1Layout = new javax.swing.GroupLayout(registro1);
        registro1.setLayout(registro1Layout);
        registro1Layout.setHorizontalGroup(
            registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registro1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(registro1Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(18, 18, 18)
                        .addComponent(txtIdRa, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel26)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbCriteriosRa, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbNivelLogroRa, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(registro1Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane8)
                        .addGap(18, 18, 18)
                        .addGroup(registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registro1Layout.createSequentialGroup()
                                .addComponent(cmbMomentoRa, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, registro1Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addGap(44, 44, 44))))))
        );
        registro1Layout.setVerticalGroup(
            registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registro1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(txtIdRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26)
                    .addComponent(cmbCriteriosRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28)
                    .addComponent(cmbNivelLogroRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(registro1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(registro1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addComponent(cmbMomentoRa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(registro1Layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel27))
                    .addGroup(registro1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        botones1.setBackground(new java.awt.Color(214, 217, 223));
        botones1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Operaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        btnNuevoRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnNuevoRa.setForeground(new java.awt.Color(29, 32, 33));
        btnNuevoRa.setText("Nuevo");
        btnNuevoRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoRaActionPerformed(evt);
            }
        });

        btnGuardarRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnGuardarRa.setForeground(new java.awt.Color(29, 32, 33));
        btnGuardarRa.setText("Guardar");
        btnGuardarRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarRaActionPerformed(evt);
            }
        });

        btnBuscarRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnBuscarRa.setForeground(new java.awt.Color(29, 32, 33));
        btnBuscarRa.setText("Buscar");
        btnBuscarRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarRaActionPerformed(evt);
            }
        });

        btnEliminarRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEliminarRa.setForeground(new java.awt.Color(29, 32, 33));
        btnEliminarRa.setText("Eliminar");

        btnEditarRa.setFont(new java.awt.Font("JetBrainsMono Nerd Font", 0, 14)); // NOI18N
        btnEditarRa.setForeground(new java.awt.Color(29, 32, 33));
        btnEditarRa.setText("Editar");
        btnEditarRa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarRaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout botones1Layout = new javax.swing.GroupLayout(botones1);
        botones1.setLayout(botones1Layout);
        botones1Layout.setHorizontalGroup(
            botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botones1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoRa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnGuardarRa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminarRa, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE)
                    .addComponent(btnBuscarRa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditarRa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        botones1Layout.setVerticalGroup(
            botones1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(botones1Layout.createSequentialGroup()
                .addComponent(btnNuevoRa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGuardarRa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBuscarRa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarRa)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditarRa))
        );

        jPanel13.setBackground(new java.awt.Color(214, 217, 223));
        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "VisualizaciÃ³n", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("JetBrainsMono Nerd Font", 2, 12), new java.awt.Color(175, 58, 3))); // NOI18N

        tblRa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane9.setViewportView(tblRa);

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addComponent(registro1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(botones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(botones1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(registro1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("RÃºbrica AnalÃ­tica", jPanel11);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void configTblResultados(boolean estado) {
        tblResultados.setModel(objRes.lista(estado));
        //cargamos la tabla de resultados
        this.tblResultados.getTableHeader().setReorderingAllowed(false); //captura el encabezado
        this.tblResultados.getTableHeader().setFont(new Font("JetBrainsMonoMedium Nerd Font", Font.PLAIN, 12));
        this.tblResultados.setRowHeight(20); //configura el tamaÃ±o de las celdas
        //Se define el tamaÃ±o de largo para cada columna y su contenido
        this.tblResultados.getColumnModel().getColumn(0).setPreferredWidth(5); //id
        this.tblResultados.getColumnModel().getColumn(1).setPreferredWidth(10); //codigo
        this.tblResultados.getColumnModel().getColumn(2).setPreferredWidth(120); //titulo
        this.tblResultados.getColumnModel().getColumn(3).setPreferredWidth(180); //descripcion
        this.tblResultados.getColumnModel().getColumn(4).setPreferredWidth(40); //fecha
        this.tblResultados.getColumnModel().getColumn(5).setPreferredWidth(10); //version
    }
    
    private void configTblCriterios(boolean estado) {
        tblCriterios.setModel(objCr.lista(estado));
        //cargamos la tabla de criterios
        this.tblCriterios.getTableHeader().setReorderingAllowed(false); //captura el encabezado
        this.tblCriterios.getTableHeader().setFont(new Font("JetBrainsMonoMedium Nerd Font", Font.PLAIN, 12));
        this.tblCriterios.setRowHeight(20); //configura el tamaÃ±o de las celdas
        //Se define el tamaÃ±o de largo para cada columna y su contenido
        this.tblCriterios.getColumnModel().getColumn(0).setPreferredWidth(5); //id
        this.tblCriterios.getColumnModel().getColumn(1).setPreferredWidth(50); //codigo
        this.tblCriterios.getColumnModel().getColumn(2).setPreferredWidth(10); //descripcion
        this.tblCriterios.getColumnModel().getColumn(3).setPreferredWidth(40); //Resultado
        this.tblCriterios.getColumnModel().getColumn(4).setPreferredWidth(20); //version
    }
    
    private void configTblNivelesLogro() {
        tblNivelesLogro.setModel(objNl.listTable());
        //cargamos la tabla de niveles de logro
        this.tblNivelesLogro.getTableHeader().setReorderingAllowed(false); //captura el encabezado
        this.tblNivelesLogro.getTableHeader().setFont(new Font("JetBrainsMonoMedium Nerd Font", Font.PLAIN, 12));
        this.tblNivelesLogro.setRowHeight(20); //configura el tamaÃ±o de las celdas
        //Se define el tamaÃ±o de largo para cada columna y su contenido
        this.tblNivelesLogro.getColumnModel().getColumn(0).setPreferredWidth(5); //id
        this.tblNivelesLogro.getColumnModel().getColumn(1).setPreferredWidth(60); //nombre
        this.tblNivelesLogro.getColumnModel().getColumn(2).setPreferredWidth(10); //abreviatura
        this.tblNivelesLogro.getColumnModel().getColumn(3).setPreferredWidth(20); //min
        this.tblNivelesLogro.getColumnModel().getColumn(4).setPreferredWidth(20); //max
    }
    
    private void configTblRubricaHolistica() {
        tblRh.setModel(objRh.listTable());
        //cargamos la tabla de niveles de logro
        this.tblRh.getTableHeader().setReorderingAllowed(false); //captura el encabezado
        this.tblRh.getTableHeader().setFont(new Font("JetBrainsMonoMedium Nerd Font", Font.PLAIN, 12));
        this.tblRh.setRowHeight(20); //configura el tamaÃ±o de las celdas
        //Se define el tamaÃ±o de largo para cada columna y su contenido
        this.tblRh.getColumnModel().getColumn(0).setPreferredWidth(5); //id
        this.tblRh.getColumnModel().getColumn(1).setPreferredWidth(10); //Criterio
        this.tblRh.getColumnModel().getColumn(2).setPreferredWidth(80); //DescripciÃ³n
        this.tblRh.getColumnModel().getColumn(3).setPreferredWidth(100); //momento
    }
    
    private void configTblRubricaAnalitica() {
        tblRa.setModel(objDhn.listTable());
        //cargamos la tabla de niveles de logro
        this.tblRa.getTableHeader().setReorderingAllowed(false); //captura el encabezado
        this.tblRa.getTableHeader().setFont(new Font("JetBrainsMonoMedium Nerd Font", Font.PLAIN, 12));
        this.tblRa.setRowHeight(20); //configura el tamaÃ±o de las celdas
        //Se define el tamaÃ±o de largo para cada columna y su contenido
        this.tblRa.getColumnModel().getColumn(0).setPreferredWidth(5); //id
        this.tblRa.getColumnModel().getColumn(1).setPreferredWidth(20); //Criterio
        this.tblRa.getColumnModel().getColumn(2).setPreferredWidth(20); //nivel de logro
        this.tblRa.getColumnModel().getColumn(3).setPreferredWidth(150); //DescripciÃ³n
        this.tblRa.getColumnModel().getColumn(4).setPreferredWidth(20); //momento
    }
    
    private void ConfigInicial() {
        configTblResultados(true);
        configTblCriterios(true);
        configTblNivelesLogro();
        configTblRubricaHolistica();
        configTblRubricaAnalitica();
        cajasRs(false,false);
        cajasCr(false, false);
        cajasNl(false, false);
        cajasRh(false, false);
        cajasRa(false, false);
        if (privilegio == true) {
            botonesRs(true, false, false, false, true);
            botonesCr(true, false, false, false, true);
            botonesNl(true, false, false, false, true);
            botonesRh(true, false, false, false, true);
            botonesRa(true, false, false, false, true);
        }
        else {
            botonesRs(false, false, false, false, false);
            botonesCr(false, false, false, false, false);
            botonesNl(false, false, false, false, false);
            botonesRh(false, false, false, false, false);
            botonesRa(false, false, false, false, false);
        }
    }
    
    /**
     * Permite cargar la lista de resultados del estudiante
     * @param jComboBox 
     */
    private void cargarJComboBoxRs(JComboBox jComboBox) {
        Iterator<Resultado> itr = listResultados.iterator(); //copia de la lista de resultados
        Resultado aux = null;
        //eliminamos el contenido de los jcombobox
        jComboBox.removeAllItems();
        //recorremos la lista de Resultados
        while (itr.hasNext()) { 
            aux = itr.next();
            jComboBox.addItem(aux.getCodigo());
        }
    }
    
    /**
     * Permite cargar la lista de Criterios
     * @param jComboBox 
     */
    private void cargarJComboBoxCr(JComboBox jComboBox) {
        Iterator<Criterio> itr = listCriterios.iterator(); //copia de la lista de resultados
        Criterio aux = null;
        //eliminamos el contenido de los jcombobox
        jComboBox.removeAllItems();
        //recorremos la lista de Resultados
        while (itr.hasNext()) { 
            aux = itr.next();
            jComboBox.addItem(aux.getCodigo());
        }
    }
    
    /**
     * Permite cargar la lista de niveles de logro
     * @param jComboBox 
     */
    private void cargarJComboBoxNl(JComboBox jComboBox) {
        Iterator<NivelLogro> itr = listNivelesLogro.iterator(); //copia de la lista de resultados
        NivelLogro aux = null;
        //eliminamos el contenido de los jcombobox
        jComboBox.removeAllItems();
        //recorremos la lista de Resultados
        while (itr.hasNext()) { 
            aux = itr.next();
            jComboBox.addItem(aux.getNombre());
        }
    }

    /**
     * Permite cargar la lista de momentos
     * @param jComboBox 
     */
    private void cargarJComboBoxMn(JComboBox jComboBox) {
        Iterator<Momento> itr = listMomentos.iterator(); //copia de la lista de resultados
        Momento aux = null;
        //eliminamos el contenido de los jcombobox
        jComboBox.removeAllItems();
        //recorremos la lista de Resultados
        while (itr.hasNext()) { 
            aux = itr.next();
            jComboBox.addItem(aux.getNombre());
        }
    }
    
    
    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        band = true; //activa para guardar un nuevo elemento
        limpiarRs();
        cajasRs(false, true);
        botonesRs(false, true, false, false, false);
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        String codigo = txtCodigo.getText(); //
        String titulo = txtTitulo.getText().trim();
        String descripcion = txtDescripcion.getText().trim();
        String version = txtVersion.getText();
        boolean vigencia = (jrbSi.isSelected() ? true : false);
        Date fechaActual = Calendar.getInstance().getTime();
        if (!codigo.equals("") && !titulo.equals("") && !descripcion.equals("")  && !version.equals("") ) {
            if (band) {//band = true guarda un resultado
                objRes.agregar(codigo, titulo, descripcion, fechaActual, vigencia, version);
            } else { //band = false actualiza un resultado
                editableRs(true);
                if (!codigo.equals(auxResultado.getCodigo())) { //codigo es direfente al de la base 
                    int rpta =  Utilitarios.confirmacion("El cÃ³digo es un dato sensible, desea modificarlo?", 0);
                    if (rpta == 0)
                        objRes.actualizar(auxResultado.getResultadoId(), codigo, titulo, descripcion, fechaActual, vigencia, version);
                    else
                        objRes.actualizar(auxResultado.getResultadoId(), auxResultado.getCodigo(), titulo, descripcion, fechaActual, vigencia, version);
                } else {
                    objRes.actualizar(auxResultado.getResultadoId(), auxResultado.getCodigo(), titulo, descripcion, fechaActual, vigencia, version);
                }
            }
            configTblResultados(true);
            cmbVigenteRs.setSelectedIndex(0);
            cajasRs(false, false);
            botonesRs(true, false, false, false, true);
            limpiarRs();
        } else {
            Utilitarios.mensaje("Ingrese todos los datos del formulario!!!", 2);
        }           
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        if (!txtId.getText().equals("")) {
            auxResultado = new Resultado(Integer.parseInt(txtId.getText()));
            if (objRes.buscar(auxResultado)) { //true fue encontrado
                txtCodigo.setText(auxResultado.getCodigo());
                txtTitulo.setText(auxResultado.getTitulo());
                txtDescripcion.setText(auxResultado.getDescripcion());
                txtVersion.setText(auxResultado.getVersion());
                boolean vigencia = auxResultado.isVigente();
                if (vigencia == true)
                    jrbSi.setSelected(true);
                else 
                    jrbNo.setSelected(true);
                txtFecha.setText(String.valueOf(auxResultado.getFechaCreacion()));
                editableRs(false);
                cajasRs(true, true);
                botonesRs(false, true, false, true, false);
            } else {
                limpiarRs();
                cajasRs(false, false);
                botonesRs(true, false, false, false, true);
            }
        } else {
            Utilitarios.mensaje("Ingrese el ID del resultado a buscar", 2);
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int respuesta = Utilitarios.confirmacion("Desea eliminar el resultado: "+txtCodigo.getText(), 0);
        if (respuesta == 0) {
            objRes.eliminar(Integer.parseInt(txtId.getText()));
            configTblResultados(true);
            cmbVigenteRs.setSelectedIndex(0);
            limpiarRs();
            editableRs(true);
            cajasRs(false, false);
            botonesRs(true, false, false, false, true);
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        band = false;
        cajasRs(true, false);
        botonesRs(false, false, true, false, false);
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtIdKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
            evt.consume();
        if (txtId.getText().length() >= 2) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtIdKeyTyped

    private void btnBuscarTableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTableActionPerformed
        boolean estado = false;
        if (cmbVigenteRs.getSelectedItem() == "Activos") //default cero
           estado = true;
        configTblResultados(estado);
    }//GEN-LAST:event_btnBuscarTableActionPerformed

    private void txtCodigoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'A' || c > 'Z') && (c!='[') && (c!=']') && (c < '0' || c > '9'))
            evt.consume();
        if (txtCodigo.getText().length() >= 7) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtCodigoKeyTyped

    private void txtTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTituloKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'a' || c > 'z') && (c < 'A' || c > 'Z') && (c!=' ') && (c!=',') && (c!='.')
                && (c!='Ã¡') && (c!='Ã©')&& (c!='Ã­')&& (c!='Ã³')&& (c!='Ãº') 
                && (c!='Ã')&& (c!='Ã')&& (c!='Ã')&& (c!='Ã')&& (c!='Ã'))
            evt.consume();
    }//GEN-LAST:event_txtTituloKeyTyped

    private void txtVersionKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtVersionKeyTyped
        char c = evt.getKeyChar();
        if ((c < '0' || c > '9') && (c != '.'))
            evt.consume();
        if (txtVersion.getText().length() >= 3) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtVersionKeyTyped

    private void btnNuevoCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCrActionPerformed
        bandc = true; //activa para guardar un nuevo elemento
        cargarJComboBoxRs(cmbResultadosCr); //cargamos los resultados del estudiante
        limpiarCr();
        cajasCr(false, true);
        botonesCr(false, true, false, false, false);
    }//GEN-LAST:event_btnNuevoCrActionPerformed

    private void btnGuardarCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCrActionPerformed
        String codigo = txtCodigoc.getText().trim(); //captura el codigo del criterio
        //capturamos el resultado selecionado
        int idResultado = 0;
        Iterator<Resultado> itCr = listResultados.iterator();
        Resultado cr = null;
        while (itCr.hasNext()) {            
            cr = itCr.next();
            if (cmbResultadosCr.getSelectedItem().equals(cr.getCodigo())) {
                idResultado = cr.getResultadoId();
                break;
            }
        }
        String descripcion = txtDescripcionc.getText().trim(); //captura la descripcion del criterio
        if (!codigo.equals("") && !descripcion.equals("") ) {
            if (bandc) {//band = true guarda un criterio
                objCr.agregar(codigo, descripcion, idResultado);
            } else { //band = false actualiza un criterio
                editableCr(true);
                if (!codigo.equals(auxCriterio.getCodigo())) {
                    int rpta = Utilitarios.confirmacion("El cÃ³digo es un dato sensible, desea modificarlo?", 0);
                    if (rpta == 0)
                        objCr.actualizar(auxCriterio.getCriterioId(), codigo, descripcion, idResultado);
                    else
                        objCr.actualizar(auxCriterio.getCriterioId(), auxCriterio.getCodigo(), descripcion, idResultado);
                } else {
                    objCr.actualizar(auxCriterio.getCriterioId(), auxCriterio.getCodigo(), descripcion, idResultado);
                }
            }
            configTblCriterios(true);
            cmbVigenteCr.setSelectedIndex(0);
            cajasCr(false, false);
            botonesCr(true, false, false, false, true);
            limpiarCr();
        } else {
            Utilitarios.mensaje("Ingrese todos los datos del formulario!!!", 2);
        }
    }//GEN-LAST:event_btnGuardarCrActionPerformed

    private void btnBuscarCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarCrActionPerformed
        String idCriterio = txtIdc.getText();
        if (!idCriterio.equals("")) {
            auxCriterio = new Criterio(Integer.parseInt(idCriterio));
            Resultado res;
            if (objCr.buscar(auxCriterio)) { //true fue encontrado
                if (auxCriterio.isVigente()) { // si esta vigente
                    cargarJComboBoxRs(cmbResultadosCr);
                    txtCodigoc.setText(auxCriterio.getCodigo());
                    txtDescripcionc.setText(auxCriterio.getDescripcion());
                    res = new Resultado(auxCriterio.getResultadoId());
                    objRes.buscar(res);
                    cmbResultadosCr.setSelectedItem(res.getCodigo());
                    editableCr(false);
                    cajasCr(true, true);
                    botonesCr(false, true, false, true, false);
                } else { //esta inhabilitado el criterio
                    Utilitarios.mensaje("El criterio que busca estÃ¡ inactivo", 2);
                    limpiarCr();
                    cajasCr(false, false);
                    botonesCr(true, false, false, false, true);
                }
            } else { //no fue encontrado
                limpiarCr();
                cajasCr(false, false);
                botonesCr(true, false, false, false, true);
            }
        } else {
            txtIdc.setText("");
            Utilitarios.mensaje("Ingrese el ID del criterio a buscar", 2);
        }
    }//GEN-LAST:event_btnBuscarCrActionPerformed

    private void btnEliminarCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCrActionPerformed
        int respuesta = Utilitarios.confirmacion("Desea eliminar el resultado: "+txtCodigo.getText(), 0);
        if (respuesta == 0) {
            objCr.eliminar(Integer.parseInt(txtIdc.getText()));
            configTblCriterios(true);
            cmbVigenteCr.setSelectedIndex(0);
            limpiarCr();
            editableCr(true);
            cajasCr(false, false);
            botonesCr(true, false, false, false, true);
        }
    }//GEN-LAST:event_btnEliminarCrActionPerformed

    private void btnEditarCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarCrActionPerformed
        bandc = false;
        cajasCr(true, false);
        botonesCr(false, false, true, false, false);
    }//GEN-LAST:event_btnEditarCrActionPerformed

    private void btnBuscarTblCrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarTblCrActionPerformed
        boolean estado = false;
        if (cmbVigenteCr.getSelectedItem() == "Activos") //default cero
           estado = true;
        configTblCriterios(estado);
    }//GEN-LAST:event_btnBuscarTblCrActionPerformed

    private void txtIdcKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdcKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
            evt.consume();
    }//GEN-LAST:event_txtIdcKeyTyped

    private void txtCodigocKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigocKeyTyped
        char c =  evt.getKeyChar();
        if ((c < 'A' || c > 'Z') && (c!='[') && (c!=']') && (c!='-') && (c < '0' || c > '9'))
            evt.consume();
        
    }//GEN-LAST:event_txtCodigocKeyTyped

    private void btnNuevoNlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoNlActionPerformed
        bandNl = true; //activa para guardar un nuevo elemento
        limpiarNl();
        cajasNl(false, true);
        botonesNl(false, true, false, false, false);
    }//GEN-LAST:event_btnNuevoNlActionPerformed

    private void btnGuardarNlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarNlActionPerformed
        
        String nombre = txtNombreNl.getText().trim(); 
        String abrebiatura = txtAbreviaturaNl.getText().trim();
        byte min = Byte.parseByte(txtValMin.getText());
        byte max = Byte.parseByte(txtValMax.getText());
        
        if (!nombre.equals("") && !abrebiatura.equals("") && !txtValMin.getText().equals("") && !txtValMax.getText().equals("")) {
            if (bandNl) {//band = true guarda un nivel de logro
                objNl.agregar(nombre, abrebiatura, min, max);
            } else { //band = false actualiza un nivel de logro
                editableNl(true);
                int idNivel = Integer.parseInt(txtIdNl.getText());
                if (!nombre.equals(auxNivelLogro.getNombre())) { //nombre es diferente al q esta en la base
                    int rpta = Utilitarios.confirmacion("El nombre es un dato sensible, desea modificar?", 0);
                    if (rpta == 0) 
                        objNl.actualizar(idNivel, nombre, abrebiatura, min, max);
                    else 
                        objNl.actualizar(idNivel, auxNivelLogro.getNombre(), abrebiatura, min, max);
                } else {
                    objNl.actualizar(idNivel, auxNivelLogro.getNombre(), abrebiatura, min, max);
                }
            }
            configTblNivelesLogro();
            cajasNl(false, false);
            botonesNl(true, false, false, false, true);
            limpiarNl();
        } else {
            Utilitarios.mensaje("Ingrese todos los datos del formulario!!!", 2);
        }
    }//GEN-LAST:event_btnGuardarNlActionPerformed

    private void btnBuscarNlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarNlActionPerformed
        String idNivel = txtIdNl.getText();
        if (!idNivel.equals("")) {
            auxNivelLogro = new NivelLogro(Integer.parseInt(idNivel));
            if (objNl.buscar(auxNivelLogro)) { //true fue encontrado
                txtNombreNl.setText(auxNivelLogro.getNombre());
                txtAbreviaturaNl.setText(auxNivelLogro.getAbreviatura());
                txtValMin.setText(String.valueOf(auxNivelLogro.getValMin()));
                txtValMax.setText(String.valueOf(auxNivelLogro.getValMax()));
                editableNl(false);
                cajasNl(true, true);
                botonesNl(false, true, false, false, false);
            } else { //no fue encontrado
                limpiarNl();
                cajasNl(false, false);
                botonesNl(true, false, false, false, true);
            }
        } else {
            txtIdNl.setText("");
            Utilitarios.mensaje("Ingrese el ID del nivel de logro a buscar", 2);
        }
    }//GEN-LAST:event_btnBuscarNlActionPerformed

    private void btnEliminarNlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarNlActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnEliminarNlActionPerformed

    private void btnEditarNlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarNlActionPerformed
        bandNl = false;
        txtIdNl.setEnabled(true);
        botonesNl(false, false, true, false, false);
    }//GEN-LAST:event_btnEditarNlActionPerformed

    private void txtIdNlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdNlKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
            evt.consume();
    }//GEN-LAST:event_txtIdNlKeyTyped

    private void txtNombreNlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreNlKeyTyped
        char c = evt.getKeyChar();
        if ((c < 'A' || c > 'Z') && (c < 'a' || c > 'z'))
            evt.consume();
    }//GEN-LAST:event_txtNombreNlKeyTyped

    private void txtAbreviaturaNlKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAbreviaturaNlKeyTyped
        char c =  evt.getKeyChar();
        if ((c < 'A' || c > 'Z'))
            evt.consume();
        if (txtAbreviaturaNl.getText().length() >=3) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
       }
    }//GEN-LAST:event_txtAbreviaturaNlKeyTyped

    private void txtValMinKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValMinKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
            evt.consume();
        if (txtValMin.getText().length() >= 2) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtValMinKeyTyped

    private void txtValMaxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValMaxKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
            evt.consume();
        if (txtValMax.getText().length() >= 2) {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtValMaxKeyTyped

    private void txtIdRhKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdRhKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
        evt.consume();
    }//GEN-LAST:event_txtIdRhKeyTyped

    private void btnNuevoRhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoRhActionPerformed
        bandRh = true; //activa para guardar un nuevo elemento
        cargarJComboBoxCr(cmbCriterioRh);
        cargarJComboBoxMn(cmbMomentoRh);
        //limpiarRh();
        cajasRh(false, true);
        botonesRh(false, true, false, false, false);
    }//GEN-LAST:event_btnNuevoRhActionPerformed

    private byte selectMomento(JComboBox jComboBox){
        byte idMomento = 0;
        Iterator<Momento> itMn = listMomentos.iterator();
        Momento m = null;
        while (itMn.hasNext()) {            
            m = itMn.next();
            if (jComboBox.getSelectedItem().equals(m.getNombre())) {
                idMomento = m.getMomentoId();
                break;
            }
        }
        return idMomento;
    }

    private int selectCriterio(JComboBox jComboBox){
        int idCriterio = 0;
        Iterator<Criterio> itCr = listCriterios.iterator();
        Criterio cr = null;
        while (itCr.hasNext()) {            
            cr = itCr.next();
            if (jComboBox.getSelectedItem().equals(cr.getCodigo())) {
                idCriterio = cr.getCriterioId();
                break;
            }
        }
        return idCriterio;
    }
    
    private int selectNivel(JComboBox jComboBox){
        int idNivel = 0;
        Iterator<NivelLogro> itNl = listNivelesLogro.iterator();
        NivelLogro nl = null;
        while (itNl.hasNext()) {            
            nl = itNl.next();
            if (jComboBox.getSelectedItem().equals(nl.getNombre())) {
                idNivel = nl.getNivelId();
                break;
            }
        }
        return idNivel;
    }
    
    private void btnGuardarRhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarRhActionPerformed
        String definicionString = txtDefinicionRh.getText().trim(); //captura la definicion
        //capturamos el criterio selecionado
        int idCriterio = selectCriterio(cmbCriterioRh);
        //capturamos el momento selecionado
        byte idMomento = selectMomento(cmbMomentoRh);
        int rptaCriterio = -1;
        int rptaMomento = -1;
                
        if (!definicionString.equals("")) {
            if (bandRh) {//band = true guarda una rubrica holistica
                Definicion definicion = new Definicion(definicionString, idCriterio);
                objRh.agregar(definicion);
                //con el id de la definicion relacionamos con los momentos seleccionados
                objDhm.agregar(definicion.getDefinicionId(), idMomento);
            } else { //band = false actualiza un criterio
                editableRh(true);
                int idDef = Integer.parseInt(txtIdRh.getText());
                if (idCriterio != auxCriterio.getCriterioId())
                    rptaCriterio = Utilitarios.confirmacion("El criterio es un dato sensible, desea modificarlo?", 0);
                if (idMomento != auxMomento.getMomentoId())
                    rptaMomento = Utilitarios.confirmacion("El momento es un dato sensible, desea modificarlo?", 0);
                
                if (rptaCriterio == 0 && rptaMomento == -1) { //cambio de criterio + definicion
                    objRh.actualizar(idDef, definicionString, idCriterio);
                } else if (rptaCriterio == -1 && rptaMomento == 0) { //cambio de momento + definicion
                    objRh.actualizar(idDef, definicionString, auxCriterio.getCriterioId());
                    objDhm.actualizar(idDef, idMomento);
                } else if (rptaCriterio == 0 && rptaMomento == 0) { //cambio de criterio y momento + definicion
                    objRh.actualizar(idDef, definicionString, idCriterio);
                    objDhm.actualizar(idDef, idMomento);
                } else if (!definicionString.equals(auxDefinicion.getDescripcion())){ // solo cambia el la definicion
                    objRh.actualizar(idDef, definicionString, auxCriterio.getCriterioId());
                } else {
                    Utilitarios.mensaje("No realizÃ³ ningÃºn cambio", 1);
                }
            }
            configTblRubricaHolistica();
            cajasRh(false, false);
            botonesRh(true, false, false, false, true);
            limpiarRh();
        } else {
            Utilitarios.mensaje("Ingrese todos los datos del formulario!!!", 2);
        }
    }//GEN-LAST:event_btnGuardarRhActionPerformed

    private void btnBuscarRhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRhActionPerformed
       String idRubrica = txtIdRh.getText();
        if (!idRubrica.equals("")) {
            auxDefinicion = new Definicion(Integer.parseInt(idRubrica)); //creamos el objeto definicion
            
            if (objRh.buscar(auxDefinicion)) { //true fue encontrado
                txtDefinicionRh.setText(auxDefinicion.getDescripcion()); //cargamos el texto
                //cargamos los datos del criterio asignado
                cargarJComboBoxCr(cmbCriterioRh); //cargamos la lista de criterios
                auxCriterio = new Criterio(auxDefinicion.getCriterioId()); //creamos el objeto criterio con el id de la definicion
                objCr.buscar(auxCriterio); //buscamos el criterio
                cmbCriterioRh.setSelectedItem(auxCriterio.getCodigo()); //asignamos el criterio
                //cargamos los datos del momento asignado
                cargarJComboBoxMn(cmbMomentoRh);
                auxMomento = objRh.moment(auxDefinicion.getDefinicionId());
                cmbMomentoRh.setSelectedItem(auxMomento.getNombre());
                
                editableRh(false);
                cajasRh(true, true);
                botonesRh(false, true, false, true, false);
                
            } else { //no fue encontrado
                limpiarRh();
                cajasRh(false, false);
                botonesRh(true, false, false, false, true);
            }
        } else {
            txtIdRh.setText("");
            Utilitarios.mensaje("Ingrese el ID de la rÃºbrica que desea buscar", 2);
        }
    }//GEN-LAST:event_btnBuscarRhActionPerformed

    private void btnEditarRhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarRhActionPerformed
        bandRh = false;
        cajasRh(true, false);
        botonesRh(false, false, true, false, false);
    }//GEN-LAST:event_btnEditarRhActionPerformed

    private void btnNuevoRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoRaActionPerformed
        bandRa = true; //activa para guardar un nuevo elemento
        cargarJComboBoxCr(cmbCriteriosRa);
        cargarJComboBoxMn(cmbMomentoRa);
        cargarJComboBoxNl(cmbNivelLogroRa);
        cajasRa(false, true);
        botonesRa(false, true, false, false, false);
    }//GEN-LAST:event_btnNuevoRaActionPerformed

    private void btnGuardarRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarRaActionPerformed
        String descripcion = txtDescripcionRa.getText().trim(); //captura la definicion
        //capturamos el criterio selecionado
        int idCriterio = selectCriterio(cmbCriteriosRa);
        // capturamos el nivel de logro seleccionado
        int idNivel = selectNivel(cmbNivelLogroRa);
        //capturamos el momento selecionado
        byte idMomento = selectMomento(cmbMomentoRa);
        int rptaCriterio = -1;
        int rptaMomento = -1;
        int rptaNivel = -1;
                
        if (!descripcion.equals("")) {
            if (bandRa) {//band = true guarda una rubrica holistica
                objDhn.agregar(idCriterio, idNivel, descripcion, idMomento);
            } else { //band = false actualiza un criterio
                editableRa(true);
              
                int idRubrica = Integer.parseInt(txtIdRa.getText());
                if (idCriterio != auxCriterio.getCriterioId())
                    rptaCriterio = Utilitarios.confirmacion("El criterio es un dato sensible, desea modificarlo?", 0);
                if (idNivel != auxNivelLogro.getNivelId())
                    rptaNivel = Utilitarios.confirmacion("El nivel de logro es un dato sensible, desea modificarlo?", 0);
                if (idMomento != auxMomento.getMomentoId())
                    rptaMomento = Utilitarios.confirmacion("El momento es un dato sensible, desea modificarlo?", 0);
                
                if (rptaCriterio == 0 && rptaNivel == -1 && rptaMomento == -1 ) { //cambio de criterio + definicion
                    objDhn.actualizar(idRubrica, idCriterio, auxNivelLogro.getNivelId(), descripcion, auxMomento.getMomentoId()); 
                } else if (rptaCriterio == -1 && rptaNivel == 0 && rptaMomento == -1 ) { //cambio de nivel de logro + definicion
                    objDhn.actualizar(idRubrica, auxCriterio.getCriterioId(), idNivel, descripcion, auxMomento.getMomentoId());
                } else if (rptaCriterio == -1 && rptaNivel == -1 && rptaMomento == 0 ) { //cambio de momento + definicion
                    objDhn.actualizar(idRubrica, auxCriterio.getCriterioId(), auxNivelLogro.getNivelId(), descripcion, idMomento);
                }else if (rptaCriterio == 0 && rptaNivel == 0 && rptaMomento == -1 ) { //cambio de criterio y nivel de logro + definicion
                    objDhn.actualizar(idRubrica, idCriterio, idNivel, descripcion, auxMomento.getMomentoId());
                }else if (rptaCriterio == 0 && rptaNivel == -1 && rptaMomento == 0 ) { //cambio de criterio y momento + definicion
                    objDhn.actualizar(idRubrica, idCriterio, auxNivelLogro.getNivelId(), descripcion, idMomento);
                }else if (rptaCriterio == -1 && rptaNivel == 0 && rptaMomento == 0 ) { //cambio de criterio y momento + definicion
                    objDhn.actualizar(idRubrica, auxCriterio.getCriterioId(), idNivel, descripcion, idMomento);
                }else if (rptaCriterio == 0 && rptaNivel == 0 && rptaMomento == 0) { //cambio de criterio y momento + definicion
                    objDhn.actualizar(idRubrica, idCriterio, idNivel, descripcion, idMomento);
                } else if (!descripcion.equals(auxDefinicionHasNivel.getDescripcion())){ // solo cambia el la definicion
                    objDhn.actualizar(idRubrica, auxCriterio.getCriterioId(), auxNivelLogro.getNivelId(), descripcion, auxMomento.getMomentoId());
                } else {
                    Utilitarios.mensaje("No realizÃ³ ningÃºn cambio", 1);
                }
            }
            configTblRubricaAnalitica();
            cajasRa(false, false);
            botonesRa(true, false, false, false, true);
            limpiarRa();
        } else {
            Utilitarios.mensaje("Ingrese todos los datos del formulario!!!", 2);
        }
    }//GEN-LAST:event_btnGuardarRaActionPerformed

    private void btnBuscarRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarRaActionPerformed
        String idRubrica = txtIdRa.getText();
        if (!idRubrica.equals("")) {
            auxDefinicionHasNivel = new DefinicionHasNivel(Integer.parseInt(idRubrica));
            if (objDhn.buscar(auxDefinicionHasNivel)) { //true fue encontrado
                cargarJComboBoxCr(cmbCriteriosRa);
                cargarJComboBoxNl(cmbNivelLogroRa);
                cargarJComboBoxMn(cmbMomentoRa);

                //cargamos el criterio
                auxCriterio = new Criterio(auxDefinicionHasNivel.getCriterioId()); //muscamos el criterio
                objCr.buscar(auxCriterio);
                cmbCriteriosRa.setSelectedItem(auxCriterio.getCodigo());
                //cargamos el nivel de logro
                auxNivelLogro = new NivelLogro(auxDefinicionHasNivel.getNivelId());
                objNl.buscar(auxNivelLogro);
                cmbNivelLogroRa.setSelectedItem(auxNivelLogro.getNombre());
                //cargamos la descripcion
                txtDescripcionRa.setText(auxDefinicionHasNivel.getDescripcion());
                //cargamos el momento
                auxMomento = new Momento(auxDefinicionHasNivel.getMomentoId());
                objMn.buscar(auxMomento);
                cmbMomentoRa.setSelectedItem(auxMomento.getNombre());
                editableRa(false);
                cajasRa(true, true);
                botonesRa(false, true, false, true, false);
            } else { //no fue encontrado
                limpiarRa();
                cajasRa(false, false);
                botonesRa(true, false, false, false, true);
            }
        } else {
            txtIdRa.setText("");
            Utilitarios.mensaje("Ingrese el ID de la rÃºbrica que desea buscar", 2);
        }
    }//GEN-LAST:event_btnBuscarRaActionPerformed

    private void btnEditarRaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarRaActionPerformed
        bandRa = false;
        cajasRa(true, false);
        botonesRa(false, false, true, false, false);
    }//GEN-LAST:event_btnEditarRaActionPerformed

    private void txtIdRaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdRaKeyTyped
        char c = evt.getKeyChar();
        if (c < '0' || c > '9')
        evt.consume();
    }//GEN-LAST:event_txtIdRaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanCriterios;
    private javax.swing.JPanel PanNiveles;
    private javax.swing.JPanel PanResultados;
    private javax.swing.JPanel botones;
    private javax.swing.JPanel botones1;
    private javax.swing.ButtonGroup btgVigente;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnBuscarCr;
    private javax.swing.JButton btnBuscarNl;
    private javax.swing.JButton btnBuscarRa;
    private javax.swing.JButton btnBuscarRh;
    private javax.swing.JButton btnBuscarTable;
    private javax.swing.JButton btnBuscarTblCr;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEditarCr;
    private javax.swing.JButton btnEditarNl;
    private javax.swing.JButton btnEditarRa;
    private javax.swing.JButton btnEditarRh;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEliminarCr;
    private javax.swing.JButton btnEliminarNl;
    private javax.swing.JButton btnEliminarRa;
    private javax.swing.JButton btnEliminarRh;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JButton btnGuardarCr;
    private javax.swing.JButton btnGuardarNl;
    private javax.swing.JButton btnGuardarRa;
    private javax.swing.JButton btnGuardarRh;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JButton btnNuevoCr;
    private javax.swing.JButton btnNuevoNl;
    private javax.swing.JButton btnNuevoRa;
    private javax.swing.JButton btnNuevoRh;
    private javax.swing.JComboBox<String> cmbCriterioRh;
    private javax.swing.JComboBox<String> cmbCriteriosRa;
    private javax.swing.JComboBox<String> cmbMomentoRa;
    private javax.swing.JComboBox<String> cmbMomentoRh;
    private javax.swing.JComboBox<String> cmbNivelLogroRa;
    private javax.swing.JComboBox<String> cmbResultadosCr;
    private javax.swing.JComboBox<String> cmbVigenteCr;
    private javax.swing.JComboBox<String> cmbVigenteRs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JRadioButton jrbNo;
    private javax.swing.JRadioButton jrbSi;
    private javax.swing.JPanel registro;
    private javax.swing.JPanel registro1;
    private javax.swing.JTable tblCriterios;
    private javax.swing.JTable tblNivelesLogro;
    private javax.swing.JTable tblRa;
    private javax.swing.JTable tblResultados;
    private javax.swing.JTable tblRh;
    private javax.swing.JTextField txtAbreviaturaNl;
    private javax.swing.JTextField txtCodigo;
    private javax.swing.JTextField txtCodigoc;
    private javax.swing.JTextPane txtDefinicionRh;
    private javax.swing.JTextPane txtDescripcion;
    private javax.swing.JTextPane txtDescripcionRa;
    private javax.swing.JTextPane txtDescripcionc;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtIdNl;
    private javax.swing.JTextField txtIdRa;
    private javax.swing.JTextField txtIdRh;
    private javax.swing.JTextField txtIdc;
    private javax.swing.JTextField txtNombreNl;
    private javax.swing.JTextField txtTitulo;
    private javax.swing.JTextField txtValMax;
    private javax.swing.JTextField txtValMin;
    private javax.swing.JTextField txtVersion;
    // End of variables declaration//GEN-END:variables

    /**
     * habilita y deshabilita los campos de texto 
     * segun el boton elegido para la vista Resultados del estudiante
     * @param a activa y desactiva el id
     * @param b  activa y desactiva el resto de campos de texto
     */
    private void cajasRs(boolean a, boolean b) {
        txtId.setEnabled(a);
        txtCodigo.setEnabled(b);
        txtTitulo.setEnabled(b);
        txtDescripcion.setEnabled(b);
        txtVersion.setEnabled(b);
        jrbSi.setEnabled(b);
        jrbNo.setEnabled(b);
        txtFecha.setEnabled(b);
    }
    
    private void editableRs(boolean b) {
        txtId.setEditable(b);
    }

    private void botonesRs(boolean a, boolean b, boolean c, boolean d, boolean e) {
        btnNuevo.setEnabled(a);
        btnGuardar.setEnabled(b);
        btnBuscar.setEnabled(c);
        btnEliminar.setEnabled(d);
        btnEditar.setEnabled(e);
    }

    private void limpiarRs() {
        txtId.setText("");
        txtCodigo.setText("");
        txtTitulo.setText("");
        txtDescripcion.setText("");
        txtVersion.setText("");
        jrbSi.setSelected(true);
        txtFecha.setText("");
    }
    
    /**
     * habilita los campos de texto de la vista criterios
     * @param a habilita el ID
     * @param b habilita el resto de campos de texto
     */
    private void cajasCr(boolean a, boolean b) {
        txtIdc.setEnabled(a);
        txtCodigoc.setEnabled(b);
        cmbResultadosCr.setEnabled(b);
        txtDescripcionc.setEnabled(b);
    }
    
    private void editableCr(boolean a) {
        txtIdc.setEditable(a);
    }
    
    private void botonesCr(boolean a, boolean b, boolean c, boolean d, boolean e) {
        btnNuevoCr.setEnabled(a);
        btnGuardarCr.setEnabled(b);
        btnBuscarCr.setEnabled(c);
        btnEliminarCr.setEnabled(d);
        btnEditarCr.setEnabled(e);
    }
    
    private void limpiarCr() {
        txtIdc.setText("");
        txtCodigoc.setText("");
        txtDescripcionc.setText("");
        cmbResultadosCr.removeAllItems();
    }
    
    /**
     * habilita los campos de texto de la vista Niveles de logro
     * @param a habilita el ID
     * @param b habilita el resto de campos de texto
     */
    private void cajasNl(boolean a, boolean b) {
        txtIdNl.setEnabled(a);
        txtNombreNl.setEnabled(b);
        txtAbreviaturaNl.setEnabled(b);
        txtValMin.setEnabled(b);
        txtValMax.setEnabled(b);
    }
    
    private void editableNl(boolean a) {
        txtIdNl.setEditable(a);
    }
    
    private void botonesNl(boolean a, boolean b, boolean c, boolean d, boolean e) {
        btnNuevoNl.setEnabled(a);
        btnGuardarNl.setEnabled(b);
        btnBuscarNl.setEnabled(c);
        btnEliminarNl.setEnabled(d);
        btnEditarNl.setEnabled(e);
    }
    
    private void limpiarNl() {
        txtIdNl.setText("");
        txtNombreNl.setText("");
        txtAbreviaturaNl.setText("");
        txtValMin.setText("");
        txtValMax.setText("");
    }
    
    /**
     * MÃ©todos para el control de la vista Rubrica Holistica
     */
    private void cajasRh(boolean a, boolean b) {
        txtIdRh.setEnabled(a);
        cmbCriterioRh.setEnabled(b);
        txtDefinicionRh.setEnabled(b);
        cmbMomentoRh.setEnabled(b);
    }
    
    private void editableRh(boolean a) {
        txtIdRh.setEditable(a);
    }
    
    private void botonesRh(boolean a, boolean b, boolean c, boolean d, boolean e) {
        btnNuevoRh.setEnabled(a);
        btnGuardarRh.setEnabled(b);
        btnBuscarRh.setEnabled(c);
        btnEliminarRh.setEnabled(d);
        btnEditarRh.setEnabled(e);
    }
    
    private void limpiarRh() {
        txtIdRh.setText("");
        txtDefinicionRh.setText("");
        cmbCriterioRh.removeAllItems();
        cmbMomentoRh.removeAllItems();
    }
    
    /**
     * MÃ©todos para el control de la vista Rubrica AnalÃ­tica
     */
    private void cajasRa(boolean a, boolean b) {
        txtIdRa.setEnabled(a);
        cmbCriteriosRa.setEnabled(b);
        cmbNivelLogroRa.setEnabled(b);
        txtDescripcionRa.setEnabled(b);
        cmbMomentoRa.setEnabled(b);
    }
    
    private void editableRa(boolean a) {
        txtIdRa.setEditable(a);
    }
    
    private void botonesRa(boolean a, boolean b, boolean c, boolean d, boolean e) {
        btnNuevoRa.setEnabled(a);
        btnGuardarRa.setEnabled(b);
        btnBuscarRa.setEnabled(c);
        btnEliminarRa.setEnabled(d);
        btnEditarRa.setEnabled(e);
    }
    
    private void limpiarRa() {
        txtIdRa.setText("");
        cmbCriteriosRa.removeAllItems();
        cmbNivelLogroRa.removeAllItems();
        txtDescripcionRa.setText("");
        cmbMomentoRa.removeAllItems();
    }
}
